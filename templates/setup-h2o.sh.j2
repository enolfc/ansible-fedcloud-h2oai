#!/bin/bash

set -exo pipefail

apt-get -qq -y update
apt-get install -qq -y \
  curl \
  wget \
  unzip \
  apt-utils \
  software-properties-common \
  python-software-properties

echo "deb http://cran.rstudio.com/bin/linux/ubuntu xenial/" > /etc/apt/sources.list.d/cran.list
gpg --keyserver keyserver.ubuntu.com --recv-key E084DAB9
gpg -a --export E084DAB9 | apt-key add -
add-apt-repository -y ppa:webupd8team/java
apt-get update -qq
echo debconf shared/accepted-oracle-license-v1-1 select true | debconf-set-selections
echo debconf shared/accepted-oracle-license-v1-1 seen true | debconf-set-selections

apt-get -y -qq install \
  python3-setuptools \
  python3-pip \
  gdebi \
  python3-pandas \
  python3-numpy \
  python3-matplotlib \
  libxml2-dev \
  libssl-dev \
  libcurl4-openssl-dev \
  libgtk2.0-0 \
  iputils-ping \
  cloud-utils \
  apache2-utils

apt-get install -y -qq \
  r-base \
  r-base-dev

CRAN_MIRROR=https://cran.uni-muenster.de

wget -q $CRAN_MIRROR/src/contrib/data.table_1.10.4.tar.gz
wget -q $CRAN_MIRROR/src/contrib/lazyeval_0.2.0.tar.gz
wget -q $CRAN_MIRROR/src/contrib/Rcpp_0.12.12.tar.gz
wget -q $CRAN_MIRROR/src/contrib/rlang_0.1.2.tar.gz
wget -q $CRAN_MIRROR/src/contrib/tibble_1.3.4.tar.gz
wget -q $CRAN_MIRROR/src/contrib/hms_0.3.tar.gz
wget -q $CRAN_MIRROR/src/contrib/feather_0.3.1.tar.gz

R CMD INSTALL \
  data.table_1.10.4.tar.gz \
  lazyeval_0.2.0.tar.gz \
  Rcpp_0.12.12.tar.gz \
  rlang_0.1.2.tar.gz \
  tibble_1.3.4.tar.gz \
  hms_0.3.tar.gz \
  feather_0.3.1.tar.gz

rm -rf *.tar.gz && \
R -e 'chooseCRANmirror(graphics=FALSE, ind=54);install.packages(c("R.utils",  "RCurl", "jsonlite", "statmod", "devtools", "roxygen2", "testthat", "Rcpp", "fpc", "RUnit", "ade4", "glmnet", "gbm", "ROCR", "e1071", "ggplot2", "LiblineaR"), repos="'$CRAN_MIRROR'")'

# Install RStudio
wget -q https://download2.rstudio.org/rstudio-server-1.0.143-amd64.deb
gdebi --non-interactive rstudio-server-1.0.143-amd64.deb
rm rstudio-server-1.0.143-amd64.deb

# Install Oracle Java 8
apt-get install -y -qq oracle-java8-installer
apt-get clean

rm -rf /var/cache/apt/*

# Install H2o
h2oBranch={{ h2oBranch }}

echo "Fetching latest build number for branch ${h2oBranch}..."
h2oBuild=$(curl --fail -s https://h2o-release.s3.amazonaws.com/h2o/${h2oBranch}/latest)

echo "Fetching full version number for build ${h2oBuild}..."
h2oVersion=$(curl --fail -s https://h2o-release.s3.amazonaws.com/h2o/${h2oBranch}/${h2oBuild}/project_version)

curl --fail --silent -o /opt/h2o-${h2oVersion}.zip https://s3.amazonaws.com/h2o-release/h2o/${h2oBranch}/${h2oBuild}/h2o-${h2oVersion}.zip

unzip -o -d /opt /opt/h2o-${h2oVersion}.zip 1> /dev/null

rm /opt/h2o-${h2oVersion}.zip
cd /opt
cp /opt/h2o-${h2oVersion}/h2o.jar /opt/h2o.jar

R CMD INSTALL `find . -name "h2o*.tar.gz"`
/usr/bin/pip3 install --upgrade pip
/usr/bin/pip3 install `find . -name "*.whl"`

# Install Jupyter
/usr/bin/pip3 install jupyter

mkdir -p /data
mkdir -p /opt/h2oai

#cd /etc/nginx/sites-enabled
#curl --fail -H 'Cache-Control: no-cache' -O https://raw.githubusercontent.com/h2oai/h2o-3/master/ec2/ami/conf/default
#curl --fail -H 'Cache-Control: no-cache' -O https://raw.githubusercontent.com/h2oai/h2o-3/master/ec2/ami/conf/notebook-site

#cd /etc/nginx/conf.d
#curl --fail -H 'Cache-Control: no-cache' -O https://raw.githubusercontent.com/h2oai/h2o-3/master/ec2/ami/conf/httpredirect.conf

cd /opt
curl --fail -H 'Cache-Control: no-cache' -O https://raw.githubusercontent.com/h2oai/h2o-3/master/ec2/ami/start-jupyter.sh
chmod +x /opt/start-jupyter.sh

cd /opt/h2oai
curl --fail -H 'Cache-Control: no-cache' -O https://raw.githubusercontent.com/h2oai/h2o-3/master/ec2/ami/get-id.sh
chmod +x get-id.sh
